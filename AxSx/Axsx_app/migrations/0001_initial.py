# Generated by Django 5.2.4 on 2025-08-28 04:50

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="AuthGroup",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=150, unique=True)),
            ],
            options={
                "db_table": "auth_group",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AuthGroupPermissions",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                "db_table": "auth_group_permissions",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AuthPermission",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("codename", models.CharField(max_length=100)),
            ],
            options={
                "db_table": "auth_permission",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AuthUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128)),
                ("last_login", models.DateTimeField(blank=True, null=True)),
                ("is_superuser", models.IntegerField()),
                ("username", models.CharField(max_length=150, unique=True)),
                ("first_name", models.CharField(max_length=150)),
                ("last_name", models.CharField(max_length=150)),
                ("email", models.CharField(max_length=254)),
                ("is_staff", models.IntegerField()),
                ("is_active", models.IntegerField()),
                ("date_joined", models.DateTimeField()),
            ],
            options={
                "db_table": "auth_user",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AuthUserGroups",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                "db_table": "auth_user_groups",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AuthUserUserPermissions",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                "db_table": "auth_user_user_permissions",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DjangoAdminLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("action_time", models.DateTimeField()),
                ("object_id", models.TextField(blank=True, null=True)),
                ("object_repr", models.CharField(max_length=200)),
                ("action_flag", models.PositiveSmallIntegerField()),
                ("change_message", models.TextField()),
            ],
            options={
                "db_table": "django_admin_log",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DjangoContentType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("app_label", models.CharField(max_length=100)),
                ("model", models.CharField(max_length=100)),
            ],
            options={
                "db_table": "django_content_type",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DjangoMigrations",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("app", models.CharField(max_length=255)),
                ("name", models.CharField(max_length=255)),
                ("applied", models.DateTimeField()),
            ],
            options={
                "db_table": "django_migrations",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DjangoSession",
            fields=[
                (
                    "session_key",
                    models.CharField(max_length=40, primary_key=True, serialize=False),
                ),
                ("session_data", models.TextField()),
                ("expire_date", models.DateTimeField()),
            ],
            options={
                "db_table": "django_session",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="TaiwanArchaeologySites",
            fields=[
                (
                    "id",
                    models.CharField(
                        db_column="ID", max_length=10, primary_key=True, serialize=False
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True, db_column="Name", max_length=30, null=True
                    ),
                ),
                (
                    "id_name",
                    models.CharField(
                        blank=True, db_column="ID_name", max_length=30, null=True
                    ),
                ),
                (
                    "culture_type",
                    models.TextField(blank=True, db_column="Culture_type", null=True),
                ),
                (
                    "rating",
                    models.CharField(
                        blank=True, db_column="Rating", max_length=20, null=True
                    ),
                ),
                ("lat", models.FloatField(blank=True, db_column="Lat", null=True)),
                ("lng", models.FloatField(blank=True, db_column="Lng", null=True)),
                (
                    "twd97_x",
                    models.FloatField(blank=True, db_column="TWD97_X", null=True),
                ),
                (
                    "twd97_y",
                    models.FloatField(blank=True, db_column="TWD97_Y", null=True),
                ),
                (
                    "county_name",
                    models.CharField(
                        blank=True, db_column="County_name", max_length=5, null=True
                    ),
                ),
                (
                    "town_name",
                    models.CharField(
                        blank=True, db_column="Town_name", max_length=5, null=True
                    ),
                ),
                ("des", models.TextField(blank=True, db_column="Des", null=True)),
                ("source", models.TextField(blank=True, db_column="Source", null=True)),
                ("note", models.TextField(blank=True, db_column="Note", null=True)),
                (
                    "town_eng",
                    models.CharField(
                        blank=True, db_column="Town_eng", max_length=45, null=True
                    ),
                ),
                (
                    "county_id",
                    models.CharField(
                        blank=True, db_column="County_ID", max_length=3, null=True
                    ),
                ),
                (
                    "county_code",
                    models.IntegerField(blank=True, db_column="County_code", null=True),
                ),
                (
                    "town_id",
                    models.CharField(
                        blank=True, db_column="Town_ID", max_length=5, null=True
                    ),
                ),
                (
                    "town_code",
                    models.IntegerField(blank=True, db_column="Town_code", null=True),
                ),
            ],
            options={
                "db_table": "taiwan_archaeology_sites",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="VisitedCount",
            fields=[
                ("count", models.IntegerField(primary_key=True, serialize=False)),
            ],
            options={
                "db_table": "count",
                "managed": False,
            },
        ),
    ]
